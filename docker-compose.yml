version: "3"
services:
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        ports:
                - 9090:9090
        volumes:
                - "./prometheus:/etc/prometheus"
                - prometheus-data:/prometheus
        restart: always
        command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

    node_exporter:
        image: prom/node-exporter
        container_name: node-exporter
        ports:
            - 9100:9100
        pid: host
        restart: always

    alertmanager:
        image: prom/alertmanager
        container_name: alertmanager
        ports:
                - 9093:9093
        volumes:
                - "./alertmanager:/config"
                - alertmanager-data:/data
        restart: unless-stopped
        command: --config.file=/config/alertmanager.yml --log.level=debug

    web:
        container_name: flask-web-app
        restart: unless-stopped
        build:
                context: .
                dockerfile: /flask_app/Dockerfile                
        ports: 
                - "5000:5000"
                - "8010:8010"

    redis:
      container_name: redis
      restart: unless-stopped
      image: "redis:alpine"

    grafana:
        ports:
            - '3000:3000'
        environment:
            - 'GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource'
        container_name: grafana
        image: grafana/grafana

    cadvisor:
        volumes:
            - '/:/rootfs:ro'
            - '/var/run:/var/run:rw'
            - '/sys:/sys:ro'
            - '/var/lib/docker/:/var/lib/docker:ro'
            - '/dev/disk/:/dev/disk:ro'
        ports:
            - '8082:8080'
        container_name: cadvisor
        image: google/cadvisor

volumes:
  prometheus-data:

  alertmanager-data: